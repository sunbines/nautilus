#!/bin/sh -e

SCRIPTNAME="$(basename "${0}")"
BASEDIR="$(readlink -f "$(dirname "${0}")")"

if [ ! -d .git ]; then
  echo "$SCRIPTNAME: Full path to the script: $BASEDIR/$SCRIPTNAME"
  echo "$SCRIPTNAME: No .git present. Run this from the base dir of the git checkout."
  exit 1
fi

# Running the script from a directory containing a colon anywhere in the path
# will expose us to the dreaded "[BUG] npm run [command] failed if the directory
# path contains colon" bug https://github.com/npm/cli/issues/633
# (see https://tracker.ceph.com/issues/39556 for details)
if [[ "$BASEDIR" == *:* ]] ; then
  echo "$SCRIPTNAME: Full path to the script: $BASEDIR/$SCRIPTNAME"
  echo "$SCRIPTNAME: The path to the script contains a colon. Their presence has been known to break the script."
  exit 1
fi

version=$1
[ -z "$version" ] && version=`git describe --match 'v*' | sed 's/^v//'`
outfile="ceph-$version"

echo "version $version"

# update submodules
echo "updating submodules..."
force=$(if git submodule usage 2>&1 | grep --quiet 'update.*--force'; then echo --force ; fi)
if ! git submodule sync || ! git submodule update $force --init --recursive; then
  echo "Error: could not initialize submodule projects"
  echo "  Network connectivity might be required."
  exit 1
fi

download_boost() 
{
  boost_version=$1
  shift
  boost_sha256=$1
  shift
  boost_version_underscore=$(echo $boost_version | sed 's/\./_/g')
  boost_fname=boost_${boost_version_underscore}.tar.bz2
  set +e
  while true; do
      url_base=$1
      shift
      if [ -z $url_base ]; then
        echo "Error: failed to download boost."
        exit
      fi
      url=$url_base/$boost_fname
      wget -c --no-verbose -O $boost_fname $url
      if [ $? != 0 -o ! -e $boost_fname ]; then
        echo "Download of $url failed"
      elif [ $(sha256sum $boost_fname | awk '{print $1}') != $boost_sha256 ]; then
        echo "Error: failed to download boost: SHA256 mismatch."
      else
        break
      fi
  done
  set -e
  tar xjf $boost_fname -C src \
    --exclude="$boost_version_underscore/libs/*/doc" \
    --exclude="$boost_version_underscore/libs/*/example" \
    --exclude="$boost_version_underscore/libs/*/examples" \
    --exclude="$boost_version_underscore/libs/*/meta" \
    --exclude="$boost_version_underscore/libs/*/test" \
    --exclude="$boost_version_underscore/tools/boostbook" \
    --exclude="$boost_version_underscore/tools/quickbook" \
    --exclude="$boost_version_underscore/tools/auto_index" \
    --exclude='doc' --exclude='more' --exclude='status'
  mv src/boost_${boost_version_underscore} src/boost
  tar cf ${outfile}.boost.tar ${outfile}/src/boost
  rm -rf src/boost
}

# clean out old cruft...
echo "cleanup..."
rm -f $outfile*

# build new tarball
echo "building tarball..."
bin/git-archive-all.sh --prefix ceph-$version/ \
		       --verbose \
		       --ignore corpus \
		       $outfile.tar

# populate files with version strings
echo "including src/.git_version, ceph.spec"

(git rev-parse HEAD ; git describe) 2> /dev/null > src/.git_version

# if the version has '-' in it, it has a 'release' part,
# like vX.Y.Z-N-g<shortsha1>.  If it doesn't, it's just
# vX.Y.Z.  Handle both, and translate - to . for rpm
# naming rules (the - separates version and release).

if expr index $version '-' > /dev/null; then
	rpm_version=`echo $version | cut -d - -f 1-1`
	rpm_release=`echo $version | cut -d - -f 2- | sed 's/-/./'`
else
	rpm_version=$version
	rpm_release=0
fi

for spec in ceph.spec.in alpine/APKBUILD.in; do
    cat $spec |
        sed "s/@VERSION@/$rpm_version/g" |
        sed "s/@RPM_RELEASE@/$rpm_release/g" |
        sed "s/@TARBALL_BASENAME@/ceph-$version/g" > `echo $spec | sed 's/.in$//'`
done
ln -s . $outfile
tar cvf $outfile.version.tar $outfile/src/.git_version $outfile/ceph.spec $outfile/alpine/APKBUILD
# NOTE: If you change this version number make sure the package is available
# at the three URLs referenced below (may involve uploading to download.ceph.com)
boost_version=1.72.0
download_boost $boost_version 59c9b274bc451cf91a9ba1dd2c7fdcaf5d60b1b3aa83f2c9fa143417cc660722 \
               https://boostorg.jfrog.io/artifactory/main/release/$boost_version/source \
               https://downloads.sourceforge.net/project/boost/boost/$boost_version \
               https://download.ceph.com/qa


tar --concatenate -f $outfile.all.tar $outfile.version.tar
tar --concatenate -f $outfile.all.tar $outfile.boost.tar
tar --concatenate -f $outfile.all.tar $outfile.tar

mv $outfile.all.tar $outfile.tar
rm $outfile
rm -f $outfile.version.tar
rm -f $outfile.boost.tar

echo "compressing..."
bzip2 -9 $outfile.tar

echo "done."
